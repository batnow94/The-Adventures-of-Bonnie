//=============================================================================// JahwsUF - Battle Stat Manager// JAH_BattleStatManager.js// Version: 1.00//=============================================================================var JahwsUF = JahwsUF || {};//=============================================================================/*: * @plugindesc v1.00 Used for configuring otherwise-hardcoded battle stats. * @author JahwsUF * * @param Critical Multiplier * @desccritical hit dmg = base damage * this multiplier * Default: 3 * @default 3 * * @param Min Initial TP * @desc Minimum amount of TP a character may have at the start of battle. * Default: 0 * @default 0 * * @param Max Initial TP * @desc Maximum amount of TP a character may have at the start of battle. * Default: 25 * @default 25 */JahwsUF.Parameters = PluginManager.parameters('JAH_BattleStatManager');JahwsUF.Param = JahwsUF.Param || {};JahwsUF.Param.CriticalMultiplier = Number(JahwsUF.Parameters['Critical Multiplier']);JahwsUF.Param.MaxInitialTP = Number(JahwsUF.Parameters['Max Initial TP']);JahwsUF.Param.MinInitialTP = Number(JahwsUF.Parameters['Min Initial TP']);// Replaces the original implementation from rpg_objects.js.Game_Action.prototype.applyCritical = function(damage) { return damage * JahwsUF.Param.CriticalMultiplier;};// Replaces the initial TP assignment function from rpg.objects.js.Game_Battler.prototype.initTp = function() { range = JahwsUF.Param.MaxInitialTP - JahwsUF.Param.MinInitialTP; this.setTp(Math.randomInt(range) + JahwsUF.Param.MinInitialTP);};You can use this to alter the base critical hit multiplier and control the range of randomness for TP - setting the min and max to the same value will result in TP always having that value at the battle's start.  (This way, it can also be something other than zero, and configurable per game/project.)